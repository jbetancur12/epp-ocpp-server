{"version":3,"sources":["../src/helpers.js"],"names":["applyPropertiesValidators","getObjectValues","MODEL_VALUES_SYMBOL","object","schema","values","joiSchema","Enjoi","properties","key","hasOwnProperty","validator","Joi","reach","validate","get","set","val","undefined","enumerable","configurable","fieldName","value","error","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAMSA,yB,GAAAA,yB;QAsCAC,e,GAAAA,e;;AA5CT;;;;AACA;;;;;;AAEA,IAAMC,sBAAsB,sBAAO,aAAP,CAA5B;;AAGA,SAASF,yBAAT,CAAoCG,MAApC,EAA4CC,MAA5C,EAAiE;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAC/D,MAAMC,YAAY,IAAIC,eAAJ,CAAUH,MAAV,CAAlB;;AAEAD,SAAOD,mBAAP,IAA8B,EAA9B;;AAEA,MAAMM,aAAa,EAAnB;;AAL+D,6BAMtDC,GANsD;AAO7D,QAAI,CAACL,OAAOI,UAAP,CAAkBE,cAAlB,CAAiCD,GAAjC,CAAL,EAA4C;AAC1C;AAAA;AAAA;AACD;AACD,QAAME,YAAYC,cAAIC,KAAJ,CAAUP,SAAV,EAAqBG,GAArB,CAAlB;;AAEAK,aAASL,GAAT,EAAcJ,OAAOI,GAAP,CAAd,EAA2BE,SAA3B;AACAR,WAAOD,mBAAP,EAA4BO,GAA5B,IAAmCJ,OAAOI,GAAP,CAAnC;;AAEAD,eAAWC,GAAX,IAAkB;AAChBM,WAAK;AAAA,eAAMZ,OAAOD,mBAAP,EAA4BO,GAA5B,CAAN;AAAA,OADW;AAEhBO,WAAK,aAACC,GAAD,EAAS;AACZH,iBAASL,GAAT,EAAcQ,GAAd,EAAmBN,SAAnB;;AAECM,gBAAQC,SAAT,GAAuB,OAAOf,OAAOD,mBAAP,EAA4BO,GAA5B,CAA9B,GAAmEN,OAAOD,mBAAP,EAA4BO,GAA5B,IAAmCQ,GAAtG;AACD,OANe;AAOhBE,kBAAY,IAPI;AAQhBC,oBAAc;AARE,KAAlB;AAf6D;;AAM/D,OAAK,IAAIX,GAAT,IAAgBL,OAAOI,UAAvB,EAAmC;AAAA,qBAA1BC,GAA0B;;AAAA;AAmBlC;;AAED,kCAAwBN,MAAxB,EAAgCK,UAAhC;;AAEA,WAASM,QAAT,CAAmBO,SAAnB,EAA8BC,KAA9B,EAAqClB,MAArC,EAA6C;AAAA,wBACzBQ,cAAIE,QAAJ,CAAaQ,KAAb,EAAoBlB,MAApB,CADyB;AAAA,QACnCmB,KADmC,iBACnCA,KADmC;;AAE3C,QAAIA,UAAU,IAAd,EAAoB;AAClB,YAAM,IAAIC,KAAJ,qBAA4BF,KAA5B,oBAAgDD,SAAhD,CAAN;AACD;AACF;AACF;;AAGD,SAASpB,eAAT,CAA0BE,MAA1B,EAAkC;AAChC,MAAME,oCAAeF,OAAOD,mBAAP,KAA+B,EAA9C,CAAN;;AAEA,OAAK,IAAIO,GAAT,IAAgBJ,MAAhB,EAAwB;AACtB,QAAI,CAACA,OAAOK,cAAP,CAAsBD,GAAtB,CAAL,EAAiC;AAC/B;AACD;AACD,QAAIJ,OAAOI,GAAP,MAAgBS,SAApB,EAA+B;AAC7B,aAAOb,OAAOI,GAAP,CAAP;AACD;AACF;AACD,SAAON,OAAOD,mBAAP,CAAP;AACD","file":"helpers.js","sourcesContent":["import Joi from 'joi';\r\nimport Enjoi from 'enjoi';\r\n\r\nconst MODEL_VALUES_SYMBOL = Symbol('modelValues');\r\n\r\nexport\r\nfunction applyPropertiesValidators (object, schema, values = {}) {\r\n  const joiSchema = new Enjoi(schema);\r\n\r\n  object[MODEL_VALUES_SYMBOL] = {};\r\n\r\n  const properties = {};\r\n  for (let key in schema.properties) {\r\n    if (!schema.properties.hasOwnProperty(key)) {\r\n      return;\r\n    }\r\n    const validator = Joi.reach(joiSchema, key);\r\n\r\n    validate(key, values[key], validator);\r\n    object[MODEL_VALUES_SYMBOL][key] = values[key];\r\n\r\n    properties[key] = {\r\n      get: () => object[MODEL_VALUES_SYMBOL][key],\r\n      set: (val) => {\r\n        validate(key, val, validator);\r\n\r\n        (val === undefined) ? (delete object[MODEL_VALUES_SYMBOL][key]) : (object[MODEL_VALUES_SYMBOL][key] = val);\r\n      },\r\n      enumerable: true,\r\n      configurable: false\r\n    };\r\n  }\r\n\r\n  Object.defineProperties(object, properties);\r\n\r\n  function validate (fieldName, value, schema) {\r\n    const { error } = Joi.validate(value, schema);\r\n    if (error !== null) {\r\n      throw new Error(`Invalid value \"${value}\" for field ${fieldName}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport\r\nfunction getObjectValues (object) {\r\n  const values = { ...(object[MODEL_VALUES_SYMBOL] || {}) };\r\n\r\n  for (let key in values) {\r\n    if (!values.hasOwnProperty(key)) {\r\n      return;\r\n    }\r\n    if (values[key] === undefined) {\r\n      delete values[key];\r\n    }\r\n  }\r\n  return object[MODEL_VALUES_SYMBOL];\r\n}\r\n"]}