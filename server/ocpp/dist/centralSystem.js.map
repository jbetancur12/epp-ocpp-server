{"version":3,"sources":["../src/centralSystem.js"],"names":["debug","DEBUG_LIBNAME","CentralSystem","options","clients","logger","Logger","port","host","validateConnection","wsOptions","handleProtocols","protocols","req","indexOf","OCPP_PROTOCOL_1_6","verifyClient","info","cb","url","LOGGER_URL","isAccept","headers","server","WebSocket","Server","on","ws","console","onNewConnection","socket","err","readyState","addSocket","protocol","close","connection","Connection","client","CentralSystemClient","onRequest","command","index","splice","push"],"mappings":"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","file":"centralSystem.js","sourcesContent":["import WebSocket from 'ws';\r\nimport debugFn from 'debug';\r\nimport Logger, { LOGGER_URL } from './logger';\r\nimport { Connection } from './connection';\r\nimport {\r\n  DEBUG_LIBNAME,\r\n  OCPP_PROTOCOL_1_6\r\n} from './constants';\r\nimport CentralSystemClient from './centralSystemClient';\r\n\r\nconst debug = debugFn(DEBUG_LIBNAME);\r\n\r\nexport default class CentralSystem {\r\n  constructor (options) {\r\n    this.options = options || {};\r\n    this.clients = [];\r\n    this.logger = new Logger();\r\n  }\r\n\r\n  listen (port = 9220, host = null) {\r\n    this.port = port;\r\n\r\n    const validateConnection = this.options.validateConnection || (() => true);\r\n\r\n    const wsOptions = {\r\n      port,\r\n      host,\r\n      handleProtocols: (protocols, req) => {\r\n        if (protocols.indexOf(OCPP_PROTOCOL_1_6) === -1) {\r\n          return '';\r\n        }\r\n        return OCPP_PROTOCOL_1_6;\r\n      },\r\n      verifyClient: async (info, cb) => {\r\n        if (info.req.url === LOGGER_URL) {\r\n          debug('Logger connected');\r\n          return cb(true);\r\n        }\r\n        const isAccept = await validateConnection(info.req.url);\r\n\r\n        this.logger.debug(`Request for connect \"${info.req.url}\" (${info.req.headers['sec-websocket-protocol']}) - ${isAccept ? 'Valid identifier' : 'Invalid identifier'}`);\r\n\r\n        cb(isAccept, 404, 'Central System does not recognize the charge point identifier in the URL path');\r\n      },\r\n      ...(this.options.wsOptions || {})\r\n    };\r\n\r\n    this.server = new WebSocket.Server(wsOptions);\r\n\r\n    this.server.on('error', (ws, req) => {\r\n      console.info(ws, req);\r\n    });\r\n\r\n    this.server.on('upgrade', (ws, req) => {\r\n      console.info(req);\r\n    });\r\n    this.server.on('connection', (ws, req) => this.onNewConnection(ws, req));\r\n\r\n    debug(`Listen on ${host || 'default host'}:${port}`);\r\n  }\r\n\r\n  onNewConnection (socket, req) {\r\n    socket.on('error', (err) => {\r\n      console.info(err, socket.readyState);\r\n    });\r\n\r\n    if (req.url === LOGGER_URL) {\r\n      this.logger.addSocket(socket);\r\n      return;\r\n    }\r\n\r\n    if (!socket.protocol) {\r\n      // From Spec: If the Central System does not agree to using one of the subprotocols offered by the client,\r\n      // it MUST complete the WebSocket handshake with a response without a Sec-WebSocket-Protocol header and then\r\n      // immediately close the WebSocket connection.\r\n      this.logger.debug(`Close connection due to unsupported protocol`);\r\n      return socket.close();\r\n    }\r\n\r\n    const connection = new Connection(socket, req, this.logger);\r\n\r\n    const client = new CentralSystemClient(connection);\r\n\r\n    connection.onRequest = (command) => this.onRequest(client, command);\r\n\r\n    socket.on('close', (err) => {\r\n      const index = this.clients.indexOf(client);\r\n      this.clients.splice(index, 1);\r\n    });\r\n    this.clients.push(client);\r\n  }\r\n\r\n  async onRequest (client, command) {\r\n    // implementation\r\n  }\r\n}\r\n"]}